{"version":3,"sources":["components/context/Context.js","components/Navbar.js","components/CartItem.js","components/Cart.js","components/App.js","index.js"],"names":["AppContext","React","createContext","initialState","loading","cart","total","amount","AppProvider","children","useReducer","state","action","type","newArray","filter","item","id","payload","reduce","cartTotal","cartItem","price","parseFloat","toFixed","cartNew","map","dispatch","useEffect","fetch","a","axios","get","response","data","Provider","value","clearCart","removeItem","toggleAmount","useGlobalContext","useContext","Navbar","className","CartItem","title","img","i","src","alt","onClick","Cart","console","log","length","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.6d969225.chunk.js","sourcesContent":["// import React, { useContext, useState, useEffect } from \"react\";\r\n// import Data from \"../Data\";\r\n\r\n// const AppContext = React.createContext();\r\n// const totalCalc = (data) => {\r\n//   return data.reduce((a, c, i, arr) => {\r\n//     return a + arr[i].price * arr[i].amount;\r\n//   }, 0);\r\n// };\r\n// const totalAmount = (data) => {\r\n//   const newAmount = data.reduce((a, c, i, arr) => {\r\n//     return a + arr[i].amount;\r\n//   }, 0);\r\n\r\n//   return newAmount;\r\n// };\r\n// export const AppProvider = ({ children }) => {\r\n//   const [data, setData] = useState(Data);\r\n//   const [total, setTotal] = useState(totalCalc(data));\r\n//   const [amount, setAmount] = useState(totalAmount(data));\r\n//   useEffect(() => {\r\n//     const totalMoney = totalCalc(data);\r\n//     setTotal(totalMoney);\r\n//   }, [data]);\r\n\r\n//   useEffect(() => {\r\n//     const amountTotal = totalAmount(data);\r\n//     setAmount(amountTotal);\r\n//   }, [data]);\r\n\r\n//   const increaseAmount = (i) => {\r\n//     const arrCopy = data.slice();\r\n//     arrCopy[i].amount += 1;\r\n//     setData(arrCopy);\r\n//   };\r\n//   const decreaseAmount = (i) => {\r\n//     const arrCopy = data.slice();\r\n//     if (data[i].amount === 1) {\r\n//       arrCopy.splice(i, 1);\r\n//     } else {\r\n//       arrCopy[i].amount -= 1;\r\n//     }\r\n//     setData(arrCopy);\r\n//   };\r\n//   const removeItem = (i) => {\r\n//     const arrCopy = data.slice();\r\n//     arrCopy.splice(i, 1);\r\n//     setData(arrCopy);\r\n//   };\r\n//   const clearData = () => {\r\n//     setData([]);\r\n//   };\r\n\r\n//   return (\r\n//     <AppContext.Provider\r\n//       value={{\r\n//         name: \"sagar\",\r\n//         increaseAmount,\r\n//         decreaseAmount,\r\n//         removeItem,\r\n//         data,\r\n//         total,\r\n//         clearData,\r\n//         amount,\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </AppContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useGlobalContext = () => {\r\n//   return useContext(AppContext);\r\n// };\r\n\r\nimport React, { useReducer, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport cartItems from \"../Data\";\r\nconst AppContext = React.createContext();\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  cart: [],\r\n  total: 0,\r\n  amount: 0,\r\n};\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"CLEAR__CART\":\r\n        return { ...state, cart: [] };\r\n      case \"REMOVE__ITEM\":\r\n        const newArray = state.cart.filter(\r\n          (item) => item.id !== action.payload\r\n        );\r\n        return { ...state, cart: newArray };\r\n\r\n      case \"TOTAL__AMOUNT\":\r\n        // const totalNumber = state.cart.reduce((a, c, i, arr) => {\r\n        //   return a + arr[i].amount;\r\n        // }, 0);\r\n        // const totalAmount = state.cart.reduce((a, c, i, arr) => {\r\n        //   return a + arr[i].amount * arr[i].price;\r\n        // }, 0);\r\n        // console.log(totalAmount);\r\n        // return { ...state, amount: totalNumber, total: totalAmount };\r\n        let { total, amount } = state.cart.reduce(\r\n          (cartTotal, cartItem) => {\r\n            const { price, amount } = cartItem;\r\n            cartTotal.amount += amount;\r\n            cartTotal.total += price * amount;\r\n            return cartTotal;\r\n          },\r\n          { total: 0, amount: 0 }\r\n        );\r\n        total = parseFloat(total.toFixed(2));\r\n        return { ...state, total, amount };\r\n      case \"SUCCESS\":\r\n        return { ...state, cart: action.payload, loading: false };\r\n      // case \"ERROR\":\r\n      //   return { ...state };\r\n      case \"TOGGLE__AMOUNT\":\r\n        const cartNew = state.cart\r\n          .map((cartItem) => {\r\n            if (action.payload.id === cartItem.id) {\r\n              if (action.payload.type === \"INC__AMOUNT\") {\r\n                return { ...cartItem, amount: cartItem.amount + 1 };\r\n              }\r\n              return { ...cartItem, amount: cartItem.amount - 1 };\r\n            }\r\n            return cartItem;\r\n          })\r\n          .filter((item) => item.amount !== 0);\r\n        return { ...state, cart: cartNew };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const URL = \"https://course-api.com/react-useReducer-cart-project\";\r\n      try {\r\n        const response = await axios.get(URL);\r\n        dispatch({ type: \"SUCCESS\", payload: response.data });\r\n      } catch (error) {\r\n        dispatch({ type: \"ERROR\" });\r\n      }\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"TOTAL__AMOUNT\" });\r\n  }, [state.cart]);\r\n\r\n  const clearCart = () => {\r\n    dispatch({ type: \"CLEAR__CART\" });\r\n  };\r\n  const removeItem = (id) => {\r\n    dispatch({ type: \"REMOVE__ITEM\", payload: id });\r\n  };\r\n  const toggleAmount = (id, type) => {\r\n    dispatch({ type: \"TOGGLE__AMOUNT\", payload: { id, type } });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        clearCart,\r\n        removeItem,\r\n        toggleAmount,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\n// const array = [\r\n//   { id: 1, fName: \"sagar\", amount: 1 },\r\n//   { id: 2, fName: \"anmol\", amount: 1 },\r\n//   { id: 3, fName: \"zoey\", amount: 1 },\r\n// ];\r\n\r\n// array.forEach((item) => (item.amount += 1));\r\n// array.forEach((item) => (item.amount += 1));\r\n// array.forEach((item) => (item.amount += 1));\r\n\r\n// console.log(array);\r\n","import React from \"react\";\r\nimport { FaShoppingBag } from \"react-icons/fa\";\r\nimport { useGlobalContext } from \"./context/Context\";\r\nconst Navbar = () => {\r\n  const { amount } = useGlobalContext();\r\n  return (\r\n    <nav>\r\n      <div className=\"nav\">\r\n        <div className=\"nav__logo\">\r\n          <h3 className=\"logo\">useReducer</h3>\r\n        </div>\r\n        <div className=\"nav__icon\">\r\n          <FaShoppingBag />\r\n          <p className=\"nav__icon--amount\">{amount}</p>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { IoIosArrowUp, IoIosArrowDown } from \"react-icons/io\";\r\nimport { useGlobalContext } from \"./context/Context\";\r\nconst CartItem = ({ id, title, price, img, amount, i }) => {\r\n  const { removeItem, toggleAmount } = useGlobalContext();\r\n\r\n  return (\r\n    <div className=\"item\" key={id}>\r\n      <div className=\"item__info\">\r\n        <div className=\"item__info--img\">\r\n          <img src={img} alt=\"\" />\r\n        </div>\r\n        <div className=\"item__info--details\">\r\n          <div className=\"company\">\r\n            <p className=\"company--name\">{title}</p>\r\n            <div className=\"company--price\">${price}</div>\r\n          </div>\r\n          <button className=\"remove\" onClick={() => removeItem(id)}>\r\n            remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item__amount\">\r\n        <IoIosArrowUp onClick={() => toggleAmount(id, \"INC__AMOUNT\")} />\r\n        <p className=\"amount\">{amount}</p>\r\n        <IoIosArrowDown onClick={() => toggleAmount(id, \"DEC__AMOUNT\")} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CartItem;\r\n","import React from \"react\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nimport { useGlobalContext } from \"./context/Context\";\r\n\r\nconst Cart = () => {\r\n  const { total, cart, clearCart, loading } = useGlobalContext(); //, clearData\r\n  const renderList = () => {\r\n    return cart.map((item, i) => {\r\n      return <CartItem key={item.id} {...item} i={i} />;\r\n    });\r\n  };\r\n  console.log(loading);\r\n  if (loading) {\r\n    return <h1 className=\"ui text loader active \">Loading....</h1>;\r\n  } else {\r\n    return (\r\n      <section className=\"cart\">\r\n        <div className=\"cart__header\">\r\n          <h2>your bag</h2>\r\n        </div>\r\n        <div className=\"cart__list\">{renderList()}</div>\r\n        {cart.length !== 0 ? (\r\n          <div className=\"cart__total\">\r\n            <span>Total</span>\r\n            <span className=\"total\">${total}</span>\r\n          </div>\r\n        ) : (\r\n          <span className=\"empty\"> is currently Empty</span>\r\n        )}\r\n        {cart.length !== 0 ? (\r\n          <button className=\"cart__clear\" onClick={() => clearCart()}>\r\n            clear cart\r\n          </button>\r\n        ) : null}\r\n      </section>\r\n    );\r\n  }\r\n};\r\nexport default Cart;\r\n","import React, { useReducer } from \"react\";\r\nimport \"../styles/main.scss\";\r\nimport Navbar from \"./Navbar\";\r\nimport Cart from \"./Cart\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Cart />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { AppProvider } from \"./components/context/Context\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}